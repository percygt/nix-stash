---
name: Update and cache

"on":
  push:
  schedule:
    # 12:00AM PHT Sat,Tue,Thu
    - cron: 0 16 * * 5,1,3
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.changes.outputs.changed }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Update flake inputs
        run: |
          nix flake update --accept-flake-config

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            changed:
              - '*'

  build:
    needs: update
    if: ${{ needs.update.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    env:
      CACHIX_BINARY_CACHE: percygtdev
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: percygtdev
      - name: Use cachix cache
        run: cachix use "$CACHIX_BINARY_CACHE"
      - name: Update flake inputs
        run: |
          nix flake update --accept-flake-config
      - name: Build packages
        run: |
          nix flake show --accept-flake-config --json \
            | jq  '.packages."x86_64-linux"|keys[]' \
            | xargs -I '{}' nix build --accept-flake-config --json --no-link --print-build-logs '.#{}' \
            | jq -r '.[].outputs | to_entries[].value' \
            | cachix push "$CACHIX_BINARY_CACHE"

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Update flake inputs
        run: |
          nix flake update --accept-flake-config
          git commit -m "Updated flake inputs" flake.lock || true

      - name: Push commit with updated inputs
        run: |
          git pull --rebase --autostash
          git push
